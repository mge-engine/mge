BasedOnStyle: LLVM
# 4 spaces, never use tabs
IndentWidth: 4
UseTab: Never
# keep "public:" at outer level
AccessModifierOffset: -4
# Type* and Type& format
PointerAlignment: Left
# brace on same line, except for types (class, struct, enum...) and functions
BreakBeforeBraces: Custom
BraceWrapping:
  AfterCaseLabel:  false
  AfterClass:      true
  AfterControlStatement: false
  AfterEnum:       true
  AfterFunction:   true
  AfterNamespace:  false
  AfterObjCDeclaration: false
  AfterStruct:     true
  AfterUnion:      true
  AfterExternBlock: false
  BeforeCatch:     false
  BeforeElse:      false
  IndentBraces:    false
  SplitEmptyFunction: false
  SplitEmptyRecord: false
  SplitEmptyNamespace: false
# format initializer lists by breaking before comma, makes merge/patch easier
# as all lines except 1st are valid on its own (no dangling ,)
#    : xxx(0)
#    , yyy(1)
BreakConstructorInitializers: BeforeComma
BreakStringLiterals: true
ColumnLimit: 80
# case labels on same level as switch
IndentCaseLabels: false
# no packing of function arguments on the same line
BinPackArguments: false
BinPackParameters: false
# keep member decl or alike aligned
AlignConsecutiveDeclarations: true
# keep empty lines, but not exhaustive
MaxEmptyLinesToKeep: 1
# prevent func(
#              a, b, c);
# formatting
AllowAllArgumentsOnNextLine: false
NamespaceIndentation: All
IndentPPDirectives: AfterHash