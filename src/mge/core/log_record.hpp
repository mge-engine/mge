// mge - Modern Game Engine
// Copyright (c) 2018 by Alexander Schroeder
// All rights reserved.
#pragma once

#include "mge/core/dllexport.hpp"
#include "mge/core/log_severity.hpp"
#include "mge/core/thread.hpp"
#include "mge/core/types.hpp"

#include <chrono>
#include <thread>

namespace mge {

    /**
     * @brief Log record as generated by log statement.
     * Note all fields pointing to strings are transient and shall not
     * be stored.
     */
    struct MGE_CORE_EXPORT log_record
    {
        using thread_id_type = std::thread::id;
        using timestamp_type = std::chrono::system_clock::time_point;

        /**
         * @brief Helper function to set message.
         *
         * @param m message string
         * @return @c *this
         */
        inline log_record &set_message(const char *m) noexcept
        {
            message = m;
            return *this;
        }

        /// Log severity of entry.
        log_severity severity;
        /// Point in time of log call.
        timestamp_type timestamp;
        /// Thread logging the message
        thread_id_type thread_id;
        /// Log category or topic.
        const char *category;
        /// Log message.
        const char *message;
    };
} // namespace mge
